services:
  api:
    image: api
    build:
      context: .
      dockerfile: BCinema.API/Dockerfile
    ports:
      - "8080:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - GOOGLE_APPLICATION_CREDENTIALS=/app/firebase-adminsdk.json
      - ConnectionStrings__DefaultConnection=Host=db;Port=5432;Database=BCinemaDB;Username=postgres;Password=123
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=BCinemaDB
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./BCinema.API/firebase-adminsdk.json:/app/firebase-adminsdk.json:ro

  db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123
      - POSTGRES_DB=BCinemaDB
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped    

networks:
  bcinema-network:
    driver: bridge

volumes:
  postgres-data: